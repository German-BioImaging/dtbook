name: deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-book:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        go-version: ["1.14.0"]
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
        pip install --pre jupyterlite
        pip install jupyterlab-webrtc-docprovider

    - name: Build the book
      run: |
        jupyter-book build dtbook

    - name: Build jupyterlite
      run: |
        mkdir jupyterlite
        cd jupyterlite
        jupyter lite init
        mv _output ../dtbook/_build/html/jupyterlite

    - name: Generate pages with snowman
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd wikidata
        gh release download --repo glaciers-in-archives/snowman -p "*snowman-linux-amd64*"
        chmod a+x snowman-linux-amd64
        ./snowman-linux-amd64 build
        mv site ../dtbook/_build/html/wikidata

    - name: Activate real-time-collaboration (RTC)
      uses: sergeysova/jq-action@v2
      with:
        cmd: "cat <<< $(jq '.[\"jupyter-config-data\"].collaborative=true' dtbook/_build/html/jupyterlite/lab/jupyter-lite.json) > dtbook/_build/html/jupyterlite/lab/jupyter-lite.json"

    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dtbook/_build/html

